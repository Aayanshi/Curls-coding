'''Given a string s containing just the characters '(', ')', '{', '}', '[' and ']', determine if the input string is valid.

An input string is valid if:
Open brackets must be closed by the same type of brackets.
Open brackets must be closed in the correct order.
Every close bracket has a corresponding open bracket of the same type.'''


'''class Solution:
    def isValid(self, s: str) -> bool:
        m = {'(':')', '{':'}','[':']'}
        stack = []
        
        for i in s:
            if i in m:
                stack.append(i)
            elif len(stack) == 0 or m[stack.pop()] != i:
                return False
        
        if len(stack)==0:
            return True
        return False
'''



'''stack = []
        
        mapping = {
            '(':')',
            '[':']',
            '{':'}'            
        }
        
        for char in s:
            if char in mapping.keys():
                stack.append(mapping[char])
            elif not stack or stack[-1]!=char:
                return False
            else:
                stack.pop()
        
        return len(stack)==0'''        

''' if len(stack) == 0 :
                    return False

                     if len(stack)==0:
            return True
        return False   '''


def isValid(self, s: str) -> bool:
        stack = []
        for i in s :
            if i == "(" or i == "{" or i == "[" :
                stack.append(i)
            
            elif stack[-1] == "(" or stack[-1] == "{" or stack[-1] == "[":
                stack.pop()
            
            else:
                return False
        
        if len(stack)==0:
            return True
        return False

